# Server Configuration
server.port=8080
spring.application.name=transfer-service

# === Atomikos JTA Configuration ===
spring.jta.enabled=true

# --- Atomikos Core Settings ---
spring.jta.atomikos.properties.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory
spring.jta.atomikos.properties.max-timeout=300000
spring.jta.atomikos.properties.enable-logging=true
# logging.level.com.atomikos=TRACE

# --- Atomikos XA DataSource Configuration ---
spring.jta.atomikos.datasource.unique-resource-name=transferPostgresXA
spring.jta.atomikos.datasource.xa-data-source-class-name=org.postgresql.xa.PGXADataSource
spring.jta.atomikos.datasource.xa-properties.user=${POSTGRES_TRANSFER_USER:transfer_user}
spring.jta.atomikos.datasource.xa-properties.password=${POSTGRES_TRANSFER_PASSWORD:your_transfer_password}
spring.jta.atomikos.datasource.xa-properties.url=${POSTGRES_TRANSFER_URL:jdbc:postgresql://localhost:5432/transfer_db}
spring.jta.atomikos.datasource.max-pool-size=10
spring.jta.atomikos.datasource.min-pool-size=2
spring.jta.atomikos.datasource.test-query=SELECT 1

# --- Atomikos XA JMS ConnectionFactory Configuration ---
# Можно использовать то же имя, если это тот же брокер, или другое, если брокеры разные
spring.jta.atomikos.connectionfactory.unique-resource-name=activemqXA
spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name=org.apache.activemq.ActiveMQXAConnectionFactory
spring.jta.atomikos.connectionfactory.xa-properties.broker-url=${ACTIVEMQ_BROKER_URL:tcp://localhost:61616}
spring.jta.atomikos.connectionfactory.xa-properties.user=${ACTIVEMQ_USER:}
spring.jta.atomikos.connectionfactory.xa-properties.password=${ACTIVEMQ_PASSWORD:}
spring.jta.atomikos.connectionfactory.max-pool-size=10

# === JPA/Hibernate Configuration ===
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# === JMS Template Configuration ===
# Убедимся, что JmsTemplate участвует в транзакции
# spring.jms.template.session-transacted=true
# spring.jms.template.delivery-mode=persistent
spring.activemq.packages.trust-all=true

# Logging
logging.level.root=INFO
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF
logging.level.org.springframework.transaction.jta=TRACE
logging.level.org.springframework.jms=DEBUG
# Логи Spring Security
logging.level.org.springframework.security=TRACE
# Логи LoginModule
logging.level.ru.sberbank.sbp.lab2.transfer_service.security.jaas=TRACE

# Integration Settings
integration.sbp-adapter.base-url=http://localhost:8083